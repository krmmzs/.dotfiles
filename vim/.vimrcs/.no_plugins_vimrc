" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" for gvim backup
if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif

let mapleader = ","

set history=100 "keep 50 lines of command line history
set ruler " show the cursor position all the time
set showcmd " display incomplete commands
set incsearch " do incremental searching
set hlsearch "设置高亮搜索

"启用手动折叠
set foldmethod=manual
" 自动保存折叠 from https://vim.fandom.com/wiki/Make_views_automatic
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview

"语法高亮
syntax enable
syntax on

"显示行号
set nu
set relativenumber " 相对

" 增加鼠标行高亮
set cursorline

"取消视觉多行
set nowrap

"修改默认注释颜色
"hi Comment ctermfg=DarkCyan
"启用鼠标可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）
set mouse=a
set selection=exclusive
set selectmode=mouse,key
"按C语言格式缩进
set cindent
set autoindent
set smartindent
set shiftwidth=4

" 允许在有未保存的修改时切换缓冲区
set hidden

" 设置无备份文件
set writebackup
set nobackup

"显示括号匹配
set showmatch
"括号匹配显示时间为1(单位是十分之一秒)
set matchtime=5
"在状态栏显示正在输入的命令
set showcmd

set foldmethod=syntax
"默认情况下不折叠
set foldlevel=100
" 开启状态栏信息 Always show the status line at the bottom, even if you only have one window open.
set laststatus=2
" 命令行的高度，默认为1，这里设为2
set cmdheight=2

" This setting makes search case-insensitive when all characters in the string
" being searched are lowercase. However, the search becomes case-sensitive if
" it contains any capital letters. This makes searching more convenient.
" 当'ignorecase'和'smartcase'都打开时，如果模式包含大写字母，则区分大小写，否则不区分大小写。
set ignorecase
set smartcase

" 显示Tab符，使用一高亮竖线代替
" such as 制表符被显示为“^I”
set list
"set listchars=tab:\|\ ,
set listchars=tab:>-,trail:-

" Disable audible bell because it's annoying.
set noerrorbells visualbell t_vb=


"侦测文件类型
filetype on
"载入文件类型插件
filetype plugin on
"为特定文件类型载入相关缩进文件
filetype indent on
" 启用自动补全
filetype plugin indent on

"设置编码自动识别, 中文引号显示
filetype on "打开文件类型检测
"set fileencodings=euc-cn,ucs-bom,utf-8,cp936,gb2312,gb18030,gbk,big5,euc-jp,euc-kr,latin1
set fileencodings=utf-8,gb2312,gbk,gb18030
"这个用能很给劲，不管encoding是什么编码，都能将文本显示汉字
"set termencoding=gb2312
set termencoding=utf-8
"新建文件使用的编码
set fileencoding=utf-8
"set fileencoding=gb2312
"用于显示的编码，仅仅是显示
set encoding=utf-8
"set encoding=utf-8
"set encoding=euc-cn
"set encoding=gbk
"set encoding=gb2312
"set ambiwidth=double
set fileformat=unix



" 着色模式
set t_Co=256

"" using gruvbox
"colorscheme gruvbox
"set background=dark
"highlight ColorColumn ctermbg=0 guibg=lightgrey

" using space_vim_theme
"colorscheme space_vim_theme
"set background=light
highlight CursorLine   cterm=NONE ctermbg=white ctermfg=NONE guibg=NONE guifg=NONE

" 字体 && 字号
set guifont=Monaco:h12
"set guifont=Consolas:h10

" 设置tab是四个空格
set ts=4
set expandtab " tab原本的制表符改成空格

" 命令行按 tab 补全时，显示一个候选菜单
set wildmenu

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

"buffer
nnoremap <Leader>bn :bn<CR>
nnoremap <Leader>bp :bp<CR>

"mymap
"open terminal to solve small project
nnoremap \\ :terminal<CR>

"give the break point to undo
inoremap , ,<c-g>u
inoremap . .<c-g>u
inoremap ! !<c-g>u
inoremap ? ?<c-g>u
inoremap <CR> <CR><c-g>u

"Y as same meran like D and C
nnoremap Y y$

" moving text
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

"Keeping it contered
nnoremap n nzz
nnoremap N Nzz
nnoremap J mzJ'z

"Jumplist mutations, solve jump list could save <number>j or <number>k
noremap <expr> k (v:count > 5 ? "m'" . v:count : "") . 'k'
noremap <expr> j (v:count > 5 ? "m'" . v:count : "") . 'j'

"输入大括号后马上按回车
:inoremap {<CR> {<CR>}<ESC>O

" Don't use Ex mode, use Q for formatting
nnoremap Q gq
